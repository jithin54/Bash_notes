Bash
------------
Prompt tells you
joe@Dell:~$

user@Compute
~ -> home directory
$ -> std user

linux file system

/ -> root
/home/ home directory

pwd
-------------
full path

clear
---------------
clear prompt

man
-----------
man ls to get the manual

	how to read manual (https://www.youtube.com/watch?v=uJnrh9hAQR0)
	---------------------
	bold text : type exactly as shown
	italic text or underline : replace with appropriate text
	
	[-abc] : arguments within are optional
	-a|-b : options can not be used together
	
	argument ... : argument is repeatable
	
	only one hyphen - is okay for all the flags
	ls -l -a
	same as ls -la
	
	[] arguments in square brackets are optional
	items not in brackets MUST be used
	
	long format
	--all 		--width = 60
	
	short format
	-a			-w 60

additionally --help also works for some commands
	ls --help

simplest form is whatis

ls
------------
list storage

	ls -a or -all
	all files including hidden (hidden files with . starting)
	
	ls -l 
	long list 
	
cd
-------------
change directory
	it supports the auto completion
	
	use escape character \space for space in the naming
	c/New\ Folder
	
cd ..
go back to one level up

cd  (with no argument)
take me home

cd ~
take me home

pushd and popd (Not needed usually)
---------------------
pushd : push to a directory 
popd : comeback to directory i was previously in

file
---------------
file type

locate
-------------
find a file
	we need to update the database to add locate items
	
which
---------------
finds other commands for use (is it installed or not, where is the location)
all the bach commandes are placed in /usr/bin
ex: usr/bin/ls

history
-----------
shows all of the commands you typed
	list last 1000 commands
	
BEST: use upper arrow for the last commands

whatis
-------------
simplest explanation of a bash command

apropos {time} (does not work for me)
------------------
search for a keyword in list of commands

man
----------
manual

IMP: not every command has a man page

WORKING WITH FILES AND DIRECTORY
------------------------------------
mkdir
--------
make a directory

mkdir red black blue : creates 3 directory

touch
-------------
update the date modified

IMP: if you touch a file that is not existing
it creates a file

cp (copying file\directory)
--------------------
cp {source} {destination with file name}

use -r recursive dor directory copying

mv (move or rename)
-----------------------
mv source destination

for renaming 
mv file1.txt file2.txt

rm (removing) 
----------------
There is no way to undelete (no recycle bin)
careull with rm

rm filename

rm file* : removes everything starting file "file"

rm * : remove everything in directory

to delete the directory, we have to use recursive
rm -r dir_name

rmdir (remove EMPTY diectory)
----------------------------
this will delete only empty diectory (this useful for cleaning)
if directory has contents, we NEED to use rm -r

EDITING TEXT FILE
-------------------------
cat
-----------------
MAINLY for viewing text file
opeining text files

cat file1.txt

creating a small text file on the go
	cat >>file2
	
	enter your data here. Ctrl+X
	
it concatenate the data


cat > file1 (create a new file)
cat >> file1 (append to the file)

more
-------------
opens the file in the terminal

less
--------------
opens the file in terminal line by line

edit a file using text editor
---------------------------------
there are many text editor
most common one is nano

nano file (opens an existing file or creates a new one)

*** nano to edit a file and cat to view the file

piping and redirection
------------------
taking from console and saving to a file

cat > file1 (create a new file)
cat >> file1 (append to the file)

piping
history | less

ls -al > list.txt

creates a new file with ls -al results

another ex: history > history.txt
* use >> add data at the end

